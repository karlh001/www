{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to arcK","text":"<p>arcK is a command-line, cross-platform archival tool to preserve data.</p> <p>Thank you for stopping by and taking an interest in this project. This is an exciting project to archive important data to ensure successful recovery. To achieve this, the directory is encoded into 5 parts with 2 extra parts for redundancy, which means you only need 3 parts to restore.</p> <p>This may take longer to do, but file integrity is of the utmost importance and this project ensures that even with 2 missing parts, data can be restored; an excellent use case is to store across multiple cloud storage providers or regional buckets with the same cloud provider. I have stored my personal photos across two S3 regions. Each bucket does not need to have all files, therefore I have stored 3 in one and 3 in another; with one part stored in both (bucket_US: 0,1,2; bucket_EU: 2,3,4). </p> <p>Before:</p> <p></p> <p>After:</p> <p></p> <p>Original data remains intact. A new archive is created. You can specify a different output directory - the above is example only.</p> <p>This is not a backup tool and cannot update the archive with incremental changes.</p> <p>Let's get started: visit the download page.</p>"},{"location":"bugs/","title":"Bugs","text":"<p>It's empty in here. As we discovery bugs they will be reported here.</p>"},{"location":"coding/","title":"Erasure code","text":"<p>Erasure code is a method to preserve data integrity by recovery from damaged parts. </p> <p>arcK uses this code to split archives into 5 parts (or given value). The archive can be restored with only 3 of the original parts.</p> <p>Wikipedia: Erasure Code</p>"},{"location":"contact/","title":"Contact","text":"<p>For more information or queries, please email:</p> <p>arck-email24@karlhunter.co.uk</p>"},{"location":"data_corruption/","title":"Data Corrpution","text":""},{"location":"data_corruption/#about","title":"About","text":"<p>This means that you cannot rebuild and repair archive because more than 2 parts are either damaged or parts are missing.</p>"},{"location":"data_corruption/#example","title":"Example","text":"<p>Example error:</p> <pre><code>[Fatal]: Too many parts have data corruption; therefore unable to reconstruct data\n</code></pre>"},{"location":"data_corruption/#resolution","title":"Resolution","text":"<p>Missing: You are unable to rebuild in current state. Ensure all parts are within the same directory.</p> <p>Fail: There may be corruption with one of the parts. You are able to tolerate 2 damaged files, but anymore results in the inability to restore. If downloaded, try to download missing parts again, or restore from backup. There is no ability to repair broken parts. </p>"},{"location":"data_corruption/#further-help","title":"Further Help","text":"<p>Reach out to arck@karlhunter.co.uk for further support. Explain where the parts were stored, current version of the application, and any other output given by the application.</p>"},{"location":"data_recovery/","title":"Data Restore","text":""},{"location":"data_recovery/#about","title":"About","text":"<p>One or more part files is either missing or corrupted, however despite this you are able to extract archive.</p>"},{"location":"data_recovery/#example","title":"Example","text":"<p>Example error:</p> <pre><code>Info]: Some parts have data corruption, but will be able to reconstruct data with remaining parts; consider extracting to repair damaged parts\n</code></pre> <p>Or:</p> <pre><code>[Info]: Some parts have data corruption, but will be able to reconstruct data with remaining parts; damaged parts will be recreated\n</code></pre> <p>The second message is displayed when extracting. The missing or failed parts will be automatically recreated. To test this afterwards, use:</p> <pre><code>arck verify -v /path/to/metadata.m\n</code></pre>"},{"location":"data_recovery/#resolution","title":"Resolution","text":"<p>Missing or broken parts will be recreated during extraction.</p>"},{"location":"data_recovery/#further-help","title":"Further Help","text":"<p>Reach out to arck@karlhunter.co.uk for further support. Explain where the parts were stored, current version of the application, and any other output given by the application.</p>"},{"location":"debug/","title":"Debug","text":"<p>To display more detailed verbose, you can enter debug mode during creation, restoration or verification.</p> <p>Use the flag <code>--debug</code> or <code>-V</code></p>"},{"location":"debug/#examples","title":"Examples","text":"<pre><code>arck create -vV -n project_name /path/to/src/ /path/dest/\narck create --verbose --debug --name project_name /path/to/src/ /path/dest/\n\narck verify -V /path/to/metadata.m\narck verify --debug /path/to/metadata.m\n</code></pre>"},{"location":"donate/","title":"Donation","text":"<p>If you find this software useful, and choose to make a donation, I would be grateful. </p> <p>click here to donate. </p>"},{"location":"download/","title":"Download and Install","text":""},{"location":"download/#manual-install-via-command-line","title":"Manual Install via Command Line","text":"<p>This will install linux 64-bit binary to the path: <code>/usr/local/bin</code></p> <pre><code>sudo rm -vf /usr/local/bin/arck &amp;&amp; sudo wget https://karlhunter.co.uk/arck/dist/linux_amd64/arck --directory-prefix=/usr/local/bin/ &amp;&amp; sudo chmod +x /usr/local/bin/arck &amp;&amp; arck install_check\n</code></pre> <p>If successful, you will get the following output:</p> <pre><code>Thank you for installing arcK version 1.X\nIf you can read this, the installation was successful.\nExiting.\n</code></pre> <ul> <li>Linux 64-bit</li> <li>Linix 32-bit</li> </ul>"},{"location":"download/#ubuntudebian-based-system-including-linux-mint","title":"Ubuntu/Debian based system (including Linux Mint)","text":"<p>Recommended method of installation for debian/ubuntu distros.</p> <ul> <li>Latest deb package</li> <li>Latest binary for Linux 64-bit</li> </ul> <p>From a graphical interface, right-click and choose Install</p> <p>From command line, type:</p> <pre><code>dpkg --install arck.deb\n</code></pre> <p>To test if the installation was successful, in a terminal type the command:</p> <pre><code>arck version\n</code></pre>"},{"location":"download/#arm","title":"Arm","text":"<p>This will install arm 64-bit dinary to the path: <code>/usr/local/bin</code></p> <pre><code>sudo rm -vf /usr/local/bin/arck &amp;&amp; sudo wget https://karlhunter.co.uk/arck/dist/arm64/arck --directory-prefix=/usr/local/bin/ &amp;&amp; sudo chmod +x /usr/local/bin/arck &amp;&amp; arck install_check\n</code></pre> <ul> <li>Arm64</li> <li>Arm</li> </ul>"},{"location":"download/#windows","title":"Windows","text":"<p>Please note: this is not a GUI. You will need to run through command prompt or PowerShell.</p> <pre><code>./arck.exe\n</code></pre> <ul> <li>Latest Windows package 64-bit</li> <li>Alternative 32-bit package</li> </ul>"},{"location":"download/#macos-x","title":"MacOS X","text":"<ul> <li>MacOS X 64-bit</li> <li>MacOS X arm</li> </ul>"},{"location":"download/#freebsd","title":"FreeBSD","text":"<ul> <li>FreeBSD 64-bit</li> <li>FreeBSD 32-bit</li> </ul>"},{"location":"download/#full-list-of-packages","title":"Full List of Packages","text":"<ul> <li>Linux 64-bit</li> <li>Linix 32-bit</li> <li>Deb package 64-bit</li> <li>Arm64</li> <li>Arm</li> <li>Windows 64-bit</li> <li>Windows 32-bit</li> <li>MacOS X 64-bit</li> <li>MacOS X arm</li> <li>FreeBSD 64-bit</li> <li>FreeBSD 32-bit</li> </ul>"},{"location":"errors/","title":"Exit Error Codes","text":"Code Description 0 Completed with no errors 1 General input error; read message given during exit 2 Encode error 3 Archive error (encoding) 5 Hash fail find file 6 Metadata error 7 Reconstruction error 8 Metadata load error 9 Unable to reconstruct due to checksum errors 10 Extraction of file"},{"location":"legacy/","title":"What is legacy mode?","text":"<p>Firstly, thank you for using arcK version 1.1. There has been some important changes from version 1.2, but rest assured you can extract or verify all archives you have already created.</p> <p>From version 1.2, there has been breaking changes on any version 1.1.X.</p> <p>However, to ensure backward compatibility, version 1.2 onwards can verify and extract archives created in previous versions. I have hundreds of gigabytes of arcK data stored is S3, so I am all in with this app and plan to maintain.</p> <p>Archives created from 1.2 cannot be extracted or verified by any 1.1.X version.</p>"},{"location":"legacy/#changes","title":"Changes","text":"<ul> <li>Due to changes to metadata file layout, which is not compatible with previous versions.</li> </ul>"},{"location":"legacy/#can-i-upgrade","title":"Can I upgrade","text":"<p>Yes, you can safely upgrade. Backwards compatibility is maintained. </p>"},{"location":"license/","title":"MIT License","text":"<p>Copyright (c) 2024 Karl Hunter</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"make/","title":"Make","text":""},{"location":"make/#command","title":"Command","text":"<pre><code>arck make -v -n name_archive /path/to/source /path/to/destination\n</code></pre> <p>Supported flags:</p> <ul> <li><code>--name</code> <code>-n</code></li> <li><code>--skip</code> <code>-s</code></li> <li><code>--ignore-size</code> <code>-i</code></li> <li><code>--verbose</code> <code>-v</code></li> <li><code>--debug</code> <code>-V</code></li> <li><code>--files</code> <code>-f</code></li> <li><code>--par</code> <code>-p</code></li> </ul> <p>The name of the archive denotes the name of the part files. For example, if you choose 'pic24' the files will be named:</p> <p><code>arck make -v -n pic24 /home/karl/pictures /mnt/backup/pictures/2024</code></p> <ul> <li>pic24.m</li> <li>pic24.0</li> <li>pic24.1</li> <li>pic24.2</li> <li>pic24.3</li> <li>pic24.5</li> </ul> <p>Name of archive cannot have equals sign.</p> <p>If you do not provide this flag, then the project name will be either the name of the file or directory.</p>"},{"location":"make/#backup","title":"Backup","text":"<p>Please ensure you keep additional copies of the metadata file, ending with the dot m file. You can never have too many copies.</p>"},{"location":"make/#create-technical","title":"Create Technical","text":"<p>Following process during creation:</p> <ol> <li>Checks user specified directory or file exists</li> <li>Checks user specified output directory exists. If not present, working directory used as the default</li> <li>Create temp archive of directory or file</li> <li>Erasure code split temp archive into parts (3 parts with 2 parity)</li> <li>Erasure coding integrity check of existing parts</li> <li>Temp archive deleted</li> <li>Metadata file created for each part</li> </ol>"},{"location":"metadata/","title":"Metadata File","text":""},{"location":"metadata/#about","title":"About","text":"<p>The metadata file is important and must be backed up and also stored alongside the parts too. In a nutshell, keep many copies of this file -- it makes restoring easier.</p> <p>The file contains the checksum values of each part. This is important because if you feed the erasure coding module with a damaged part, it could result in failure to reconstruct the archive. If a part fails, arcK will automatically delete the damaged part - afterall, it's useless now. But remember, you can restore the archive with just 3 parts. </p>"},{"location":"metadata/#fixing-damanged-or-lost-metadata-file","title":"Fixing damanged or lost metadata file","text":"<p>If you need to recreate the metadata file, generate sha256 checksum of each part and store in the metadata file on one line. This can be in any order. Nb. End the line with a semi-colon.</p> <p>A great tool to generate hashes is sha256deep. Read my article here.</p> <p><code>archive_name.0=sha256hash;archive_name.1=sha256hash; ...;&amp;hash;</code></p> <p>Nb. Note the line must end with <code>;&amp;hash;</code></p> <p>Name the file with the same name of the parts. For example, if the archive parts are called 'pictures.X' then name the metadata file 'pictures.m'</p> <p>If you are not confident of the integrity of the parts, then use 'skip' in place of the hash. For example:</p> <p><code>archive_name.0=936a185caaa266bb9cbe981e9e05cb78cd732b0b3280eb944412bb6f8f8f07af;archive_name.1=skip; ...;&amp;hash;</code></p> <p>This will ensure the program continues without giving you an error, then the erasure coding module will attempt to check the archive parts' integrity. This may fail, as giving this module bad data may result in failure to restore; hence why the metadata file is of utmost importance. In this case, try renaming each part and then see if the restoration works until you find the bad part. There may be more than one bad part, which makes this process complex.</p> <p>Nb. You can only lose two parts. Further failure will result in your files being lost.</p>"},{"location":"metadata/#contact","title":"Contact","text":"<p>Please reach out if you are having difficulty.</p> <p><code>arck@karlhunter.co.uk</code></p>"},{"location":"parity/","title":"Custom Parity","text":"<p>From version 1.2, you now have ability to customise the amount of files created with number of parity files.</p> <p>If you do not specify your own values, the default will be:</p> <pre><code>`--files 3 --par 2`\n</code></pre> <p>Therefore, a total of 6 files, including metadata file, will be created.</p>"},{"location":"parity/#meaning","title":"Meaning","text":"<p>The <code>files</code> flag denotes number of non-redundent files you wish to keep; the higher the value, the smaller the individual file size. So, if you create an archive with <code>--files 5</code> you will get 5 files (6 including metadata file) before you add parity. To ensure redundency, you must specify a <code>--par</code> value. If you use <code>--par 2</code> this means in total you will now have created 8 files (including metadata file).</p>"},{"location":"parity/#working-together","title":"Working together","text":"<pre><code>arck create --files 5 --par 2 /path/dir /path/output\n</code></pre>"},{"location":"release/","title":"Release Notes","text":""},{"location":"release/#130","title":"1.3.0","text":"<p>01 Nov 2025</p> <p>Breaking Changes: If you are using scripts to manage arcK, these scripts will be broken due to change in command syntax when upgrading from 1.2.x to 1.3.x</p> <ul> <li>Enhancement: syntax change. Commands now: make, verify and restore followed by flags, e.g. <code>arck make -v /path/ /dest/path/</code> or <code>arck restore /path/to/file.m /dest/path/</code> more</li> <li>Enhancement: if you specify a file, does not tar first, encodes directly</li> <li>Tweak: wizard mode removed</li> <li>Enhancement: rewritten documentation</li> <li>Built with Golang version 1.24.2</li> <li>Dependencies<ul> <li>cpuid v2.3.0</li> <li>reedsolomon v1.12.5</li> <li>pflag v1.0.10</li> <li>sys v0.37.0</li> <li>yaml v3.0.1</li> </ul> </li> </ul>"},{"location":"release/#123","title":"1.2.3","text":"<p>24 Oct 2025</p> <p>For documentation, visit archived pages here</p> <ul> <li>Enhancement: if you specify a file, does not tar first, encodes directly</li> <li>Tweak: File size shows in GB not bytes</li> </ul>"},{"location":"release/#122","title":"1.2.2","text":"<p>20 Oct 2025</p> <ul> <li>Feature: checks available disk space before creating or extracting archive</li> <li>Feature: --ignore-size flag (which will skip above feature)</li> <li>Fun: anniversary upgrade (arcK is 1 year old)</li> </ul>"},{"location":"release/#121","title":"1.2.1","text":"<p>29 Apr 2025</p> <p>Bug: Verify feature: fixed incorrect reporting around data corruption if users sets own par value during creation</p>"},{"location":"release/#120","title":"1.2.0","text":"<p>29 Apr 2025*</p> <p>Breaking changes: archives created in this version cannot be extracted or verified by previous versions; however, backward compatability still exists: previous archives created by all arcK versions can be restored and verifed</p> <p>I am pleased to annouch a new branch. Version 1.2 now allows you to split large part files, making it easy to upload to cloud storage.</p> <ul> <li>New metadata file layout more</li> <li>Increased verbose output in debug mode more</li> <li>Feature: custom part files; new flags <code>--files X</code> <code>--par X</code> more</li> <li>Feature: legancy mode to extract archives created in previous version more</li> <li>Reduced verbose output in normal mode</li> <li>Bug: fixed overwriting of file if same name given during creation</li> </ul>"},{"location":"release/#116","title":"1.1.6","text":"<p>14 Apr 2025</p> <p>For documentation, visit archived pages here</p> <ul> <li>Feature: Added ability to enter debug mode with flag <code>-debug</code></li> <li>Bug: Fixed display bug which reports a mixture of missing and failed can still be restored</li> <li>Added URL to aid users understand fail or missing error</li> </ul>"},{"location":"release/#115","title":"1.1.5","text":"<p>06 Apr 2025</p> <p>Breaking changes: archives created in this version cannot be extracted or verified by previous versions; however, backward compatability still exists: previous archives created by all arcK versions can be restored and verifed from 1.1.5 onwards</p> <ul> <li>Allows additional metadata in the future to m file</li> <li>Fixes critcal bug that crashes if m file does not exist or broken</li> </ul>"},{"location":"release/#114","title":"1.1.4","text":"<p>05 Apr 2025</p> <ul> <li>If no project specified, then will be name of file or directory</li> <li>Built with go version 1.24.2</li> <li>Minor text tweaks</li> </ul>"},{"location":"release/#113","title":"1.1.3","text":"<ul> <li>No new features; new year bump</li> </ul>"},{"location":"release/#112","title":"1.1.2","text":"<p>27 Oct 2024</p> <ul> <li>Added skip flag (skips verification checks during restore)</li> <li>Improved a few info messages and error messages during restore should failure occur</li> </ul>"},{"location":"release/#111","title":"1.1.1","text":"<p>19 Oct 2024</p> <ul> <li>Fixed deb package. Conflicting package called ark already exists. Change to arck</li> <li>Changed project name, arcK</li> </ul>"},{"location":"release/#110","title":"1.1.0","text":"<p>13 Oct 2024</p> <ul> <li>New wizard</li> <li>Minor tweaks and fixes</li> </ul>"},{"location":"release/#100","title":"1.0.0","text":"<p>12 Oct 2024</p> <p>Welcome to the first release of ark. We hope you find it useful.</p>"},{"location":"restore/","title":"Restore","text":""},{"location":"restore/#command","title":"Command","text":"<pre><code>arck restore -v /path/to/file.m /path/to/restore/\n</code></pre> <p>Supported flags:</p> <ul> <li><code>--skip</code></li> <li><code>--ignore-size</code> <code>-i</code></li> <li><code>--verbose</code> <code>-v</code></li> <li><code>--debug</code> <code>-V</code></li> </ul>"},{"location":"restore/#extract-technical","title":"Extract Technical","text":"<p>Following process during extraction:</p> <ol> <li>Checks metadata file exists (if metadata file missing, (read this)[metadata.md])</li> <li>Checks user-defined output directory exists. If not specify, working directory used as default</li> <li>Checks checksums of parts against metadata file</li> <li>Deletes any damaged parts - these are now useless and can cause issues restoring</li> <li>Erasure coding integrity checks</li> <li>Combination of parts</li> <li>Temp archive created by extracting parts, which is extracted then deleted</li> </ol> <p>Directory structure restored.</p>"},{"location":"start/","title":"Getting Started","text":""},{"location":"start/#quick-start","title":"Quick Start","text":""},{"location":"start/#download","title":"Download","text":"<p>Download and install first, click here</p>"},{"location":"start/#make","title":"Make","text":"<p>To make an archive, simply run:</p> <pre><code>arck make -v /path/to/source/ /output/dir/\n</code></pre>"},{"location":"start/#verify","title":"Verify","text":"<p>And to verify an archive, point to the metadata file, ending with the <code>m</code> extension.</p> <pre><code>arck verify -v /path/to/meta.m\n</code></pre>"},{"location":"start/#restore","title":"Restore","text":"<p>And to restore (extract) the archive:</p> <pre><code>arck restore /output/dir/archive_name.m /path/to/destination\n</code></pre>"},{"location":"start/#more","title":"More","text":"<p>Full usage, click here</p>"},{"location":"tech/","title":"Technical Manual","text":"<ul> <li>Make</li> <li>Restore</li> <li>Metadata File</li> <li>Erasure Coding</li> <li>Exit Error Codes</li> <li>Parity</li> <li>Data corruption error</li> <li>Data recovery message</li> <li>Legacy mode</li> <li>Debug mode</li> </ul>"},{"location":"usage/","title":"CLI Usage","text":"<pre><code>arck [command] [flags] [source] [destination]\n</code></pre> Command Description Flags make Create an archive from given path -v -V -f XX -p XX -i --verbose --debug --files XX --par XX --ignore-size restore Extracts archive to given destination -v -V -i -s --ignore-size --skip verify Checks integrity of part files -v -V --verbose --debug version Output current application version none about Display application about message none help Display application help none Flag Short Flag Long Description -n --name Specify the name of the archive. If omitted name will be the same as the file or directory given -f XX --files XX Specify total part files to create, default 5 -p XX --par XX Specify parity files, default 2 -V --debug Increase verbosity and give detailed info / error output -s --skip Skip integrity check and just try to restore. Nb. Ensure all parts are not damaged or missing -i --ignore-size Skip size check when creating or extracting archives. May take a long time for large directory trees"},{"location":"usage/#create-archive","title":"Create archive","text":"<p>You can specify a directory (recommended) or file. </p> <p>You do not need to tar archive a directory yourself. </p> <pre><code>arck make /path/to/source/ /path/to/outputdir/\n</code></pre> <p>You cannot create archive names with an equals (=) sign. If you want to use a space remember to enclose in perensese: <code>-n \"name of archive\"</code></p> <p>If you do not specify a project name, the name of the file or directory is used by default.</p> <p>Nb: The output directory must have double the available space to match the source directory. After processing, the space requirement will the same as the source directory.</p> <p>IMPORTANT: You must backup the .m file, as without this you cannot easily restore your files. If this is missing, please the metadata file technical manual or reach out for advice.</p> <p>How this works.</p>"},{"location":"usage/#verify-archive","title":"Verify archive","text":"<p>A useful feature is to verify the integrity of the archive parts. Testing backups are an important aspect of data preservation. Verifying is a faster method to test parts integrity without restoring the archive.</p> <pre><code>arck verify /path/to/archive.m\n</code></pre> <p>You will need to specify the archive metadata file. As a reminder, you should keep this backed up and ideally keep multiple copies. More on the (metadata file)[metadata.md].</p> <p>You will be given an output like:</p> <p><code>project.0  PASS project.1  PASS project.2  PASS project.3  PASS project.4  PASS</code></p> <p>If there are any failed parts, the output will read:</p> <p><code>project.3  FAIL</code></p> <p>In this case, consider restoring broken part from backup and re-testing. There are no methods to fix broken parts, but if there are enough \"working\" parts, you can restore. To restore, there needs to be 3 of the 5 parts undamaged. </p>"},{"location":"usage/#restore-archive","title":"Restore archive","text":"<p>Before you restore, ensure metadate file is located with parts. Example, metadata file named [archive_name].m</p> <p>File structure:</p> <p><code>archive.m archive.0 archive.1 archive.2 archive.3 archive.4</code></p> <p>You can still restore if parts are missing. Let the program handle this. </p> <pre><code>arck restore /path/to/metadata_file.m /path/to/outputdir/\n</code></pre> <p>How this works.</p>"}]}